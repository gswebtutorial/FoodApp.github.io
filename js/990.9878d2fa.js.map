{"version":3,"file":"js/990.9878d2fa.js","mappings":"oLAOMA,EAAyB,SAACC,EAAIC,EAAiBC,EAAgBC,EAAeC,GAClF,IAAMC,EAAML,EAAGM,cAAcC,YACvBC,GAAMC,EAAAA,EAAAA,GAAMT,GAMZU,EAAW,SAACC,GAChB,IAAMC,EAAY,GACVC,EAAWF,EAAXE,OACR,OAAIL,EACKK,GAAUR,EAAIS,WAAaF,EAE7BC,GAAUD,CACnB,EACMG,EAAY,SAACJ,GACjB,OAAOH,GAAOG,EAAOK,OAASL,EAAOK,MACvC,EACMC,EAAe,SAACN,GACpB,OAAOH,GAAOG,EAAOO,UAAYP,EAAOO,SAC1C,EACMC,EAAW,SAACR,GAChB,OAAOD,EAASC,IAAWV,GAC7B,EACMmB,EAAS,SAACT,GAEd,IAAMU,EAAQN,EAAUJ,GAClBW,EAAYD,EAAQhB,EAAIS,WAC9BX,EAAcmB,EAChB,EACMC,EAAQ,SAACZ,GAEb,IAAMU,EAAQN,EAAUJ,GAClBa,EAAQnB,EAAIS,WACZQ,EAAYD,EAAQG,EACpBC,EAAWR,EAAaN,GACxBe,EAAIF,EAAQ,EACZG,EAAiBF,GAAY,IAAMA,EAAW,IAAOJ,EAAQK,GAC7DE,EAAUD,EAAiB,EAAIL,EAAYA,EAC3CO,EAAkBD,EAAUJ,EAC9BM,EAAU,EACd,GAAID,EAAkB,EAAG,CACvB,IAAME,EAAMF,EAAkBG,KAAKC,IAAIR,GACvCK,EAAUE,KAAKE,IAAIH,EAAK,IAC1B,CACA3B,EAAauB,EAAgBL,GAAa,EAAI,KAAOa,EAAAA,EAAAA,GAAM,EAAGb,EAAW,OAASQ,EACpF,EACA,OAAOM,EAAAA,EAAAA,eAAc,CACnBpC,GAAAA,EACAqC,YAAa,eACbC,gBAAiB,GACjB1B,UAAW,GACXO,SAAAA,EACAoB,QAASrC,EACTkB,OAAAA,EACAG,MAAAA,GAEJ,C","sources":["webpack://gstest/./node_modules/@ionic/core/components/swipe-back.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { h as clamp } from './helpers.js';\nimport { i as isRTL } from './dir.js';\nimport { createGesture } from './index2.js';\n\nconst createSwipeBackGesture = (el, canStartHandler, onStartHandler, onMoveHandler, onEndHandler) => {\n  const win = el.ownerDocument.defaultView;\n  const rtl = isRTL(el);\n  /**\n   * Determine if a gesture is near the edge\n   * of the screen. If true, then the swipe\n   * to go back gesture should proceed.\n   */\n  const isAtEdge = (detail) => {\n    const threshold = 50;\n    const { startX } = detail;\n    if (rtl) {\n      return startX >= win.innerWidth - threshold;\n    }\n    return startX <= threshold;\n  };\n  const getDeltaX = (detail) => {\n    return rtl ? -detail.deltaX : detail.deltaX;\n  };\n  const getVelocityX = (detail) => {\n    return rtl ? -detail.velocityX : detail.velocityX;\n  };\n  const canStart = (detail) => {\n    return isAtEdge(detail) && canStartHandler();\n  };\n  const onMove = (detail) => {\n    // set the transition animation's progress\n    const delta = getDeltaX(detail);\n    const stepValue = delta / win.innerWidth;\n    onMoveHandler(stepValue);\n  };\n  const onEnd = (detail) => {\n    // the swipe back gesture has ended\n    const delta = getDeltaX(detail);\n    const width = win.innerWidth;\n    const stepValue = delta / width;\n    const velocity = getVelocityX(detail);\n    const z = width / 2.0;\n    const shouldComplete = velocity >= 0 && (velocity > 0.2 || delta > z);\n    const missing = shouldComplete ? 1 - stepValue : stepValue;\n    const missingDistance = missing * width;\n    let realDur = 0;\n    if (missingDistance > 5) {\n      const dur = missingDistance / Math.abs(velocity);\n      realDur = Math.min(dur, 540);\n    }\n    onEndHandler(shouldComplete, stepValue <= 0 ? 0.01 : clamp(0, stepValue, 0.9999), realDur);\n  };\n  return createGesture({\n    el,\n    gestureName: 'goback-swipe',\n    gesturePriority: 40,\n    threshold: 10,\n    canStart,\n    onStart: onStartHandler,\n    onMove,\n    onEnd,\n  });\n};\n\nexport { createSwipeBackGesture };\n"],"names":["createSwipeBackGesture","el","canStartHandler","onStartHandler","onMoveHandler","onEndHandler","win","ownerDocument","defaultView","rtl","isRTL","isAtEdge","detail","threshold","startX","innerWidth","getDeltaX","deltaX","getVelocityX","velocityX","canStart","onMove","delta","stepValue","onEnd","width","velocity","z","shouldComplete","missing","missingDistance","realDur","dur","Math","abs","min","clamp","createGesture","gestureName","gesturePriority","onStart"],"sourceRoot":""}